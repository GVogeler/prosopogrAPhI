swagger: "2.0"

info:
  version: 0.1.0
  title: prosopogrAPhI
  description: basic prosopographical data API
  # contact: georg.vogeler@uni-graz.at
  # licence 

schemes:
  - https
  - http
host: dev.monasterium.net
basePath: /prosop.0.1
produces:
  - application/json
  - text/xml
  
paths:
  /factoid:
    get:
      summary: Gets factoids
      description: Gets a list of factoids
      parameters:
        - name: pageSize
          in: query
          description: sets the  number of factoids returned per page
          type: integer
        - name: pageNumber
          in: query
          description: page number of returned factoids
          type: integer
      responses:
        200:
          description: a list of Factoid
          schema:
            type: array
            items:
              $ref: "#/definitions/Factoid"
        404:
          description: no factoid found
          #ToDo: not found n√§her definieren
        500:
          $ref: "#/responses/Standard500ErrorResponse"
    post:
      summary: creates or updates factoids
      parameters:
        - name: factoid
          in: body
          description: the factoid
          schema:
            $ref: "#/definitions/Factoid"
          # FixMe: Wo stecke ich hier kompliziertere Datenstrukturen hin?
      responses:
        204:
          description: factoid created or updated
        400:
          description: factoid could not be created or updated
  /factoid/{id}:
    get:
      summary: gets the factoid with the {id}
      parameters:
        - name: id
          in: path
          required: true
          description: can be either the local id, or the uri or the uri of a owl:sameAs entry
          type: string
      responses:
        200:
          description: a factoid
          schema:
            $ref: "#/definitions/Factoid"
        404:
          description: the factoid does not exist
    post:
      summary: updates the factoid with the {id}
      parameters:
        - name: id
          in: path
          required: true
        - name: content
          in: body
          schema:
            $ref: "#/definitions/Factoid"
      responses:
        204:
          description: factoid updated
        400:
          description: factoid could not be updated
  /person:
    get:
      summary: get a list of persons
      responses:
        default:
          description: test
          schema:
            type: array
            items:
              $ref: "#/definitions/Person"
  /person/{id}:
    get:
      responses:
  /person/search:
    get:
      responses:
  /source:
    get:
      responses:
  /source/{id}:
    get:
      responses:
  /source/search:
    get:
      responses:
  /search:
    get:
      responses:
  /describe:
    get:
      description: gives basic information about schemas used, numbers of entries and implementation of API
      responses:
  /describe/statement/schema:
    get:
      description: the schemas used to describe the statements
      responses:
  /describe/return/schema:
    get:
      description: the schemas supported by the server as return values
      responses:
  /describe/return/format:
    get:
      description: the serialisations supported by the server for return values
      responses:
  /describe/source/schema:
    get:
      description: the schemas used to describe the source
      responses:



definitions:
  Factoid:
      type: object
      items:
        required:
          - id
        properties:
          id:
            $ref: "#/definitions/id"
          person:
            $ref: "#/definitions/Person"
          statement:
            $ref: "#/definitions/Statement"
          source:
            $ref: "#/definitions/Source"
  Person:
    properties:
      id:
        $ref: "#/definitions/id"
      uri:
        $ref: "#/definitions/uri"
      sameAs:
        $ref: "#/definitions/sameAs"
  Statement:
    properties:
      id:
        $ref: "#/definitions/id"
      content:
        type: string
  Source:
    properties:
      id:
        $ref: "#/definitions/id"
      uri:
        $ref: "#/definitions/uri"
      sameAs:
        $ref: "#/definitions/sameAs"
  id:
    description: the local id of the factoid
    type: string
  uri:
    description: the uri of the factoid
    type: string
  sameAs:
    description: the uri of a factoid referenced with owl:sameAs
    type: string
  Error:
    properties:
      code:
        type: string
      message:
        type: string
responses:
  Standard500ErrorResponse:
    description: An unexpected error occurred.
    schema:
      $ref: "#/definitions/Error"